//During the test the env constiable is set to test
process.env.NODE_ENV = 'test';

//Require the dev-dependencies
const chai = require('chai');
const chaiHttp = require('chai-http');
const server = require('../app');
const should = chai.should();

chai.use(chaiHttp);
describe('Teste do endpoint cliente', () => {
    beforeEach((done) => { //Before each test we empty the database
           done();             
    });
    /**
     * Post Method para a rota do Cliente
     */
    describe('/Post cliente', () => {
      it('Nao deve funcionar', (done) => {
      const cliente={
        'nome': 'TESTE EMPRESA', 
        };
        chai.request(server)
            .post('/api/clientes')
            .send(cliente)
            .end((err, res) => {
                res.should.have.status(500);
                res.body.should.be.a('object');
                res.body.should.have.property('status');
                res.body.status.should.be.a('boolean');
                res.body.status.should.equal(false);
              done();
            });
      });
      it('Deve colocar cliente', function(done) {
      const cliente={
        'nome': 'TESTE EMPRESA', 
        'cnpj': '95284516000111'
        };
        chai.request(server)
            .post('/api/clientes')
            .send(cliente)
            .end(function(err, res){
                res.should.have.status(200);
                res.should.be.json;
                res.body.should.be.a('object');
                res.body.should.have.property('status');
                res.body.status.should.be.a('boolean');
                res.body.status.should.equal(true);
                done();
            });
      });
    });
  /*
  * Test the /GET/:nome route
  */
  describe('/GET/:nome cliente', () => {
      it('deve pegar o cliente pelo cnpj', (done) => {
        const cliente={
            nome: 'TESTE EMPRESA', 
            cnpj : '95284516000111'
        };
        chai.request(server)
        .get('/api/clientes/nome/'+ cliente.nome)
        .end((err, res) => {
            res.should.have.status(200);
            res.body.should.be.a('object');
            res.body.data.should.have.property('nome');
            res.body.data.should.have.property('cnpj');
            res.body.data.should.have.property('nome').eql(cliente.nome);
            done();
        });

      });
  });
  /*
  * Test the /GET/:cnpj route
  */
  describe('/GET/:cnpj cliente', () => {
      it('Deve pegar o cliente pelo cnpj', (done) => {
        const cliente={
            nome: 'TESTE EMPRESA', 
            cnpj : '95284516000111'
        };
        chai.request(server)
        .get('/api/clientes/cnpj/'+ cliente.cnpj)
        .end((err, res) => {
            res.should.have.status(200);
            res.body.should.be.a('object');
            res.body.data.should.have.property('nome');
            res.body.data.should.have.property('cnpj').eql(cliente.cnpj);
            done();
        });

      });
  });
  /*
  * Put cliente
  */
  describe('/Put cliente', () => {
        const cliente={
            nome: 'TESTE EMPRESA Atualizado', 
            cnpj : '95284516000111'
        };
    it('deve atualizar cliente', (done) => {    
        chai.request(server)
            .put('/api/clientes/'+ cliente.cnpj)
        .send(cliente)
        .end((error, response) => {
            response.should.have.status(200);
            response.body.should.be.a('object');
            response.body.should.have.property('status');
            response.body.status.should.be.a('boolean');
            response.body.status.should.equal(true);
            done();
        });
    });
  });
 /*
  * Test the /GET route
  */
  describe('/GET clientes', () => {
      it('it should GET all the clientes', (done) => {
        chai.request(server)
            .get('/api/clientes')
            .end((err, res) => {
                res.should.have.status(200);
                res.should.be.json;
                res.body.should.be.a('object');
                res.body.should.have.property('status');
                res.body.status.should.be.a('boolean');
                res.body.status.should.equal(true);
                res.body.data.should.be.a('array');
                done();
            });
      });
  });


  /**
   * Delete cliente
   */
  describe('/Delete cliente', () => {
        const cliente={
            nome: 'TESTE EMPRESA', 
            cnpj : '95284516000111'
        };
        it('deve deletar cliente', (done) => {    
            chai.request(server)
            .delete('/api/clientes/'+ cliente.cnpj)
            .end((error, response) => {
                response.should.have.status(200);
                response.body.should.be.a('object');
                response.body.should.have.property('status');
                response.body.status.should.be.a('boolean');
                response.body.status.should.equal(true);
                done();
            });
        });
    });
});